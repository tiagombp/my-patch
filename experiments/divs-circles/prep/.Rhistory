output[["a"]]
output <- list()
letter_no <- 1
for (starting_line in starting_lines) {
for (starting_col in starting_cols) {
print(paste(starting_line, starting_col, letter_no))
seq <- 0
vetor_saida <- NULL
i <- 0
j <- 0
for (i in 0:7) {
for (j in 0:7) {
#print(paste(starting_line, starting_col, i, j, el))
el <- grid[[i+starting_line, j+starting_col]] %>% unlist()
if (el == 1 & !is.na(el)) {
vetor_saida <- c(vetor_saida, seq)
} else {
next
}
seq <- seq + 1
}
}
output[[letters[letter_no]]] <- vetor_saida
letter_no <- letter_no+1
}
}
output[["a"]]
output <- list()
letter_no <- 1
for (starting_line in starting_lines) {
for (starting_col in starting_cols) {
print(paste(starting_line, starting_col, letter_no))
seq <- 0
vetor_saida <- NULL
i <- 0
j <- 0
for (i in 0:7) {
for (j in 0:7) {
#print(paste(starting_line, starting_col, i, j, el))
el <- grid[[i+starting_line, j+starting_col]] %>% unlist()
if (el == 1 & !is.na(el)) {
vetor_saida <- c(vetor_saida, seq)
} else {
next
}
}
seq <- seq + 1
}
output[[letters[letter_no]]] <- vetor_saida
letter_no <- letter_no+1
}
}
output <- list()
letter_no <- 1
for (starting_line in starting_lines) {
for (starting_col in starting_cols) {
print(paste(starting_line, starting_col, letter_no))
seq <- 0
vetor_saida <- NULL
i <- 0
j <- 0
for (i in 0:7) {
for (j in 0:7) {
#print(paste(starting_line, starting_col, i, j, el))
el <- grid[[i+starting_line, j+starting_col]] %>% unlist()
if (el == 1 & !is.na(el)) {
vetor_saida <- c(vetor_saida, seq)
} else {
next
}
seq <- seq + 1
}
}
output[[letters[letter_no]]] <- vetor_saida
letter_no <- letter_no+1
}
}
output[["a"]]
output <- list()
letter_no <- 1
for (starting_line in starting_lines) {
for (starting_col in starting_cols) {
#print(paste(starting_line, starting_col, letter_no))
seq <- 0
vetor_saida <- NULL
i <- 0
j <- 0
for (i in 0:7) {
for (j in 0:7) {
print(paste(starting_line, starting_col, i, j, el, seq))
el <- grid[[i+starting_line, j+starting_col]] %>% unlist()
if (el == 1 & !is.na(el)) {
vetor_saida <- c(vetor_saida, seq)
} else {
next
}
seq <- seq + 1
}
}
output[[letters[letter_no]]] <- vetor_saida
letter_no <- letter_no+1
}
}
output <- list()
letter_no <- 1
for (starting_line in starting_lines) {
for (starting_col in starting_cols) {
#print(paste(starting_line, starting_col, letter_no))
seq <- 0
vetor_saida <- NULL
i <- 0
j <- 0
for (i in 0:7) {
for (j in 0:7) {
print(paste(starting_line, starting_col, i, j, el, seq))
el <- grid[[i+starting_line, j+starting_col]] %>% unlist()
seq <- seq + 1
if (el == 1 & !is.na(el)) {
vetor_saida <- c(vetor_saida, seq-1)
} else {
next
}
}
}
output[[letters[letter_no]]] <- vetor_saida
letter_no <- letter_no+1
}
}
grid[[1,1]]
library(jsonify)
library(jsonlite)
jsonlite::write_json(output, "grid.json")
library(tidyverse)
library(readxl)
grid <- readxl::read_excel('characters8bit.xlsx') %>%
select(-1) %>% as.matrix()
starting_lines <- seq(1, nrow(grid), 8)
starting_cols <- seq(1, ncol(grid), 8)
output <- list()
letter_no <- 1
for (starting_line in starting_lines) {
for (starting_col in starting_cols) {
#print(paste(starting_line, starting_col, letter_no))
seq <- 0
vetor_saida <- NULL
i <- 0
j <- 0
for (i in 0:7) {
for (j in 0:7) {
print(paste(starting_line, starting_col, i, j, el, seq))
el <- grid[[i+starting_line, j+starting_col]] %>% unlist()
seq <- seq + 1
if (el == 1 & !is.na(el)) {
vetor_saida <- c(vetor_saida, seq-1)
} else {
next
}
}
}
output[[letters[letter_no]]] <- vetor_saida
letter_no <- letter_no+1
}
}
library(jsonify)
library(jsonlite)
jsonlite::write_json(output, "grid.json")
grid <- readxl::read_excel('characters8bit.xlsx', sheet = 'letters') %>%
select(-1) %>% as.matrix()
grid <- readxl::read_excel('characters8bit.xlsx', sheet = 'letters') %>%
select(-1) %>% as.matrix()
View(grid)
starting_lines <- seq(1, nrow(grid), 8)
starting_cols <- seq(1, ncol(grid), 8)
output <- list()
letter_no <- 1
for (starting_line in starting_lines) {
for (starting_col in starting_cols) {
#print(paste(starting_line, starting_col, letter_no))
seq <- 0
vetor_saida <- NULL
i <- 0
j <- 0
for (i in 0:7) {
for (j in 0:7) {
print(paste(starting_line, starting_col, i, j, el, seq))
el <- grid[[i+starting_line, j+starting_col]] %>% unlist()
seq <- seq + 1
if (el == 1 & !is.na(el)) {
vetor_saida <- c(vetor_saida, seq-1)
} else {
next
}
}
}
output[[letters[letter_no]]] <- vetor_saida
letter_no <- letter_no+1
}
}
letter_no <- 1
for (starting_line in starting_lines) {
for (starting_col in starting_cols) {
#print(paste(starting_line, starting_col, letter_no))
seq <- 0
vetor_saida <- NULL
i <- 0
j <- 0
for (i in 0:7) {
for (j in 0:7) {
print(paste(starting_line, starting_col, i, j, el, seq))
el <- grid[[i+starting_line, j+starting_col]] %>% unlist()
seq <- seq + 1
if (el == 1 & !is.na(el)) {
vetor_saida <- c(vetor_saida, seq-1)
} else {
next
}
}
}
output[[letters[letter_no]]] <- vetor_saida
letter_no <- letter_no+1
}
}
for (i in 0:7) {
for (j in 0:7) {
el <- grid[[i+starting_line, j+starting_col]] %>% unlist()
print(paste(starting_line, starting_col, i, j, el, seq))
seq <- seq + 1
if (el == 1 & !is.na(el)) {
vetor_saida <- c(vetor_saida, seq-1)
} else {
next
}
}
}
output[[letters[letter_no]]] <- vetor_saida
letter_no <- letter_no+1
output[[1]]
View(output)
length(letters)
simbolos <- c("heart", "exclamation", "smile")
simbolos <- c(letters, "heart", "exclamation", "smile")
starting_lines <- seq(1, nrow(grid), 8)
starting_cols <- seq(1, ncol(grid), 8)
output <- list()
simbolos <- c(letters, "heart", "exclamation", "smile")
letter_no <- 1
for (starting_line in starting_lines) {
for (starting_col in starting_cols) {
#print(paste(starting_line, starting_col, letter_no))
seq <- 0
vetor_saida <- NULL
i <- 0
j <- 0
for (i in 0:7) {
for (j in 0:7) {
el <- grid[[i+starting_line, j+starting_col]] %>% unlist()
print(paste(starting_line, starting_col, i, j, el, seq))
seq <- seq + 1
if (el == 1 & !is.na(el)) {
vetor_saida <- c(vetor_saida, seq-1)
} else {
next
}
}
}
output[[letters[letter_no]]] <- vetor_saida
letter_no <- letter_no+1
}
}
starting_lines <- seq(1, nrow(grid), 8)
starting_cols <- seq(1, ncol(grid), 8)
output <- list()
simbolos <- c(letters, "heart", "exclamation", "smile")
letter_no <- 1
for (starting_line in starting_lines) {
for (starting_col in starting_cols) {
#print(paste(starting_line, starting_col, letter_no))
seq <- 0
vetor_saida <- NULL
i <- 0
j <- 0
for (i in 0:7) {
for (j in 0:7) {
el <- grid[[i+starting_line, j+starting_col]] %>% unlist()
print(paste(starting_line, starting_col, i, j, el, seq))
seq <- seq + 1
if (el == 1 & !is.na(el)) {
vetor_saida <- c(vetor_saida, seq-1)
} else {
next
}
}
}
output[[simbolos[letter_no]]] <- vetor_saida
letter_no <- letter_no+1
}
}
jsonlite::write_json(output, "grid.json")
grid <- readxl::read_excel('characters8bit.xlsx', sheet = 'letters') %>%
select(-1) %>% as.matrix()
starting_lines <- seq(1, nrow(grid), 8)
starting_cols <- seq(1, ncol(grid), 8)
output <- list()
simbolos <- c(letters, "heart", "exclamation", "smile", "ellipsis")
letter_no <- 1
for (starting_line in starting_lines) {
for (starting_col in starting_cols) {
#print(paste(starting_line, starting_col, letter_no))
seq <- 0
vetor_saida <- NULL
i <- 0
j <- 0
for (i in 0:7) {
for (j in 0:7) {
el <- grid[[i+starting_line, j+starting_col]] %>% unlist()
print(paste(starting_line, starting_col, i, j, el, seq))
seq <- seq + 1
if (el == 1 & !is.na(el)) {
vetor_saida <- c(vetor_saida, seq-1)
} else {
next
}
}
}
output[[simbolos[letter_no]]] <- vetor_saida
letter_no <- letter_no+1
}
}
library(jsonify)
library(jsonlite)
jsonlite::write_json(output, "grid.json")
bar_chart <- readxl::read_excel('characters8bit.xlsx', sheet = 'bar_chart') %>%
# output ------------------------------------------------------------------
library(jsonify)
bar_chart <- readxl::read_excel('characters8bit.xlsx', sheet = 'bar_chart')
View(bar_chart)
bar_chart <- readxl::read_excel('characters8bit.xlsx', sheet = 'bar_chart') %>%
as.matrix()
bar_chart <- readxl::read_excel('characters8bit.xlsx',
sheet = 'bar_chart',
range = 'B1:AE40') %>%
as.matrix()
View(grid)
View(bar_chart)
bar_chart <- readxl::read_excel('characters8bit.xlsx',
sheet = 'bar_chart',
range = 'B1:AE40') %>%
as.matrix()
View(bar_chart)
bar_chart <- readxl::read_excel('characters8bit.xlsx',
sheet = 'bar_chart',
range = 'B1:AE40') %>%
as.matrix()
bar_chart <- readxl::read_excel('characters8bit.xlsx',
sheet = 'bar_chart',
range = 'B1:AO40') %>%
as.matrix()
vetor_bar_chart <- NULL
seq <- 0
for (i in 1:nrow(bar_chart)) {
for (j in 1:ncol(bar_chart)) {
el <- bar_chart[[i, j]] %>% unlist()
print(paste(i, j, el, seq))
if (!is.na(el)) {
elemento <- list()
elemento[["pos"]] <- seq
elemento[["cor"]] <- el
vetor_saida <- c(vetor_saida, elemento)
} else {
next
}
seq <- seq + 1
}
}
vetor_bar_chart <- NULL
seq <- 0
for (i in 1:nrow(bar_chart)) {
for (j in 1:ncol(bar_chart)) {
el <- bar_chart[[i, j]] %>% unlist()
print(paste(i, j, el, seq))
seq <- seq + 1
if (!is.na(el)) {
elemento <- list()
elemento[["pos"]] <- seq-1
elemento[["cor"]] <- el
vetor_saida <- c(vetor_saida, elemento)
} else {
next
}
}
}
39*40
vetor_bar_chart <- NULL
seq <- 0
for (i in 1:nrow(bar_chart)) {
for (j in 1:ncol(bar_chart)) {
el <- bar_chart[[i, j]] %>% unlist()
print(paste(i, j, el, seq))
seq <- seq + 1
if (!is.na(el)) {
elemento <- list()
elemento[["pos"]] <- seq-1
elemento[["cor"]] <- el
vetor_bar_chart <- c(vetor_bar_chart, elemento)
} else {
next
}
}
}
View(vetor_bar_chart)
vetor_bar_chart[[1]]
vetor_bar_chart[[2]]
lista_bar_chart <- list()
seq <- 0
list_position <- 1
for (i in 1:nrow(bar_chart)) {
for (j in 1:ncol(bar_chart)) {
el <- bar_chart[[i, j]] %>% unlist()
print(paste(i, j, el, seq))
seq <- seq + 1
if (!is.na(el)) {
elemento <- list()
elemento[["pos"]] <- seq-1
elemento[["cor"]] <- el
lista_bar_chart[[list_position]] <- elemento
list_position <- list_position + 1
} else {
next
}
}
}
View(lista_bar_chart)
general_output <- list(
letters = output,
drawings = list(
bar_chart = lista_bar_chart
)
)
jsonlite::write_json(general_output, "grid.json")
process_drawing <- function(drawing, excel_range) {
# returns the list with positions and colors
data <- bar_chart <- readxl::read_excel('characters8bit.xlsx',
sheet = drawing,
range = excel_range) %>%
as.matrix()
this_list <- list()
seq <- 0
list_position <- 1
for (i in 1:nrow(data)) {
for (j in 1:ncol(data)) {
el <- data[[i, j]] %>% unlist()
#print(paste(i, j, el, seq))
seq <- seq + 1
if (!is.na(el)) {
elemento <- list()
elemento[["pos"]] <- seq-1
elemento[["cor"]] <- el
this_list[[list_position]] <- elemento
list_position <- list_position + 1
} else {
next
}
}
}
return(this_list)
}
lista_bar_chart2 <- process_drawing(
drawing = 'bar_chart',
excel_range = 'B1:AO40'
)
lista_bar_chart == lista_bar_chart2
webdev <- process_drawing(
drawing = 'webdev',
excel_range = 'W1:BJ40'
)
bar_chart <- process_drawing(
drawing = 'bar_chart',
excel_range = 'B1:AO40'
)
general_output <- list(
letters = output,
drawings = list(
bar_chart = bar_chart,
webdev = wevdev
)
)
general_output <- list(
letters = output,
drawings = list(
bar_chart = bar_chart,
webdev = webdev
)
)
jsonlite::write_json(general_output, "grid.json")
family <- process_drawing(
drawing = 'family',
excel_range = 'W1:BJ40'
)
cookie <- process_drawing(
drawing = 'cookie',
excel_range = 'W1:BJ40'
)
general_output <- list(
letters = output,
drawings = list(
bar_chart = bar_chart,
webdev = webdev,
family = family,
cookie = cookie
)
)
jsonlite::write_json(general_output, "grid.json")
