n <- 1
indice <- 1
output <- list()
for (j in 1:grid_h) {
for (i in 1:grid_w) {
estado1 <- ifelse(is.na(as.data.frame(grid1)[i,j]), 0, 1)
estado2 <- ifelse(is.na(as.data.frame(grid2)[i,j]), 0, 1)
estado3 <- ifelse(is.na(as.data.frame(grid3)[i,j]), 0, 1)
if (estado1 + estado2 + estado3 == 0) {
} else {
print(paste(i, j, estado1, estado2, estado3))
output[[indice]] <- list(
i = n,
x = i,
y = j,
st1 = unlist(estado1),
st2 = estado2,
st3 = estado3
)
indice <- indice + 1
}
n <- n + 1
}
}
n <- 1
indice <- 1
output <- list()
for (j in 1:grid_h) {
for (i in 1:grid_w) {
estado1 <- ifelse(is.na(as.data.frame(grid1)[i,j]), 0, 1)
estado2 <- ifelse(is.na(as.data.frame(grid2)[i,j]), 0, 1)
estado3 <- ifelse(is.na(as.data.frame(grid3)[i,j]), 0, 1)
if (estado1 + estado2 + estado3 == 0) {
} else {
print(paste(i, j, estado1, estado2, estado3))
output[[indice]] <- list(
i = n,
x = i,
y = j,
st1 = estado1,
st2 = estado2,
st3 = estado3
)
indice <- indice + 1
}
n <- n + 1
}
}
output[[67]]
library(jsonlite)
write_json(output, 'grid.json')
library(tidyverse)
library(readxl)
library(jsonlite)
grid1 <- read_excel('grids.xlsx', sheet = 1)
grid2 <- read_excel('grids.xlsx', sheet = 2)
grid3 <- read_excel('grids.xlsx', sheet = 3)
linhas <- 5
colunas <- 7
cells_por_linha <- 9
cells_por_coluna <- 7
grid_h <- linhas * cells_por_linha
grid_w <- colunas * cells_por_coluna
n <- 1
indice <- 1
output <- list()
for (i in 1:grid_w) {
for (j in 1:grid_h) {
estado1 <- ifelse(is.na(as.data.frame(grid1)[i,j]), 0, 1)
estado2 <- ifelse(is.na(as.data.frame(grid2)[i,j]), 0, 1)
estado3 <- ifelse(is.na(as.data.frame(grid3)[i,j]), 0, 1)
if (estado1 + estado2 + estado3 == 0) {
} else {
print(paste(i, j, estado1, estado2, estado3))
output[[indice]] <- list(
i = n,
x = i,
y = j,
st1 = estado1,
st2 = estado2,
st3 = estado3
)
indice <- indice + 1
}
n <- n + 1
}
}
write_json(output, 'grid.json')
View(grid1)
plot_grid <- grid1 %>%gather(key = "col", value = "valor")
View(plot_grid)
View(plot_grid)
str_sub('col4', 4)
str_sub('col41', 4)
plot_grid <- grid1 %>%
gather(key = "col", value = "valor") %>%
mutate(y = row_number(),
x = as.number(str_sub(4)))
plot_grid <- grid1 %>%
gather(key = "col", value = "valor") %>%
mutate(y = row_number(),
x = as.numeric(str_sub(4)))
View(plot_grid)
plot_grid <- grid1 %>%
gather(key = "col", value = "valor") %>%
mutate(y = row_number(),
x = as.numeric(str_sub(col,4)))
ggplot(plot_grid) + geom_point(aes(x = x, y = y))
ggplot(plot_grid) + geom_point(aes(x = x, y = y, size = valor))
ggplot(plot_grid) + geom_point(aes(x = x, y = -y, size = valor))
ggplot(plot_grid) + geom_point(aes(x = x, y = -y, color = valor))
plot_grid <- grid1 %>%
gather(key = "col", value = "valor") %>%
mutate(x = as.numeric(str_sub(col,4))) %>%
group_by(col) %>%
mutate(y = row_number())
ggplot(plot_grid) + geom_point(aes(x = x, y = -y, color = valor))
ggplot(plot_grid) + geom_point(aes(x = x, y = -y, size = valor))
for (j in 1:grid_h) {
for (i in 1:grid_w) {
estado1 <- ifelse(is.na(as.data.frame(grid1)[i,j]), 0, 1)
estado2 <- ifelse(is.na(as.data.frame(grid2)[i,j]), 0, 1)
estado3 <- ifelse(is.na(as.data.frame(grid3)[i,j]), 0, 1)
if (estado1 + estado2 + estado3 == 0) {
} else {
print(paste(i, j, estado1, estado2, estado3))
output[[indice]] <- list(
i = n,
x = i,
y = j,
st1 = estado1,
st2 = estado2,
st3 = estado3
)
indice <- indice + 1
}
n <- n + 1
}
}
write_json(output, 'grid.json')
grid <- data.frame()
for (el in output) {
print(el)
}
nn <- 1
output[[1]]
tam <- length(output)
grid <- data.frame(
x = rep(0, tam),
y = rep(0, tam),
st1 = rep(0, tam))
nn <- 1
for (el in output) {
grid[1,x] = el$x
grid[1,y] = el$y
grid[1,st1] = el$st1
}
for (el in output) {
grid[1,'x'] = el$x
grid[1,'y'] = el$y
grid[1,'st1'] = el$st1
}
View(grid)
nn <- 1
for (el in output) {
grid[nn,'x'] = el$x
grid[nn,'y'] = el$y
grid[nn,'st1'] = el$st1
nn <- nn+1
}
ggplot(grid) + geom_point(aes(x = x, y = -y, size = st1))
View(grid1)
grid <- data.frame(
x = rep(0, tam),
y = rep(0, tam),
st1 = rep(0, tam))
nn <- 1
for (el in output) {
grid[nn,'x'] = el$y
grid[nn,'y'] = el$x
grid[nn,'st1'] = el$st1
nn <- nn+1
}
ggplot(grid) + geom_point(aes(x = x, y = -y, size = st1))
n <- 1
indice <- 1
output <- list()
for (j in 1:grid_w) {
for (i in 1:grid_h) {
estado1 <- ifelse(is.na(as.data.frame(grid1)[j,i]), 0, 1)
estado2 <- ifelse(is.na(as.data.frame(grid2)[j,i]), 0, 1)
estado3 <- ifelse(is.na(as.data.frame(grid3)[j,i]), 0, 1)
if (estado1 + estado2 + estado3 == 0) {
} else {
print(paste(i, j, estado1, estado2, estado3))
output[[indice]] <- list(
i = n,
x = i,
y = j,
st1 = estado1,
st2 = estado2,
st3 = estado3
)
indice <- indice + 1
}
n <- n + 1
}
}
write_json(output, 'grid.json')
n <- 1
indice <- 1
output <- list()
for (i in 1:grid_h) {
for (j in 1:grid_w) {
estado1 <- ifelse(is.na(as.data.frame(grid1)[j,i]), 0, 1)
estado2 <- ifelse(is.na(as.data.frame(grid2)[j,i]), 0, 1)
estado3 <- ifelse(is.na(as.data.frame(grid3)[j,i]), 0, 1)
if (estado1 + estado2 + estado3 == 0) {
} else {
print(paste(i, j, estado1, estado2, estado3))
output[[indice]] <- list(
i = n,
x = i,
y = j,
st1 = estado1,
st2 = estado2,
st3 = estado3
)
indice <- indice + 1
}
n <- n + 1
}
}
write_json(output, 'grid.json')
3%/%2
n <- 1
indice <- 1
output <- list()
for (i in 1:grid_h) {
for (j in 1:grid_w) {
estado1 <- ifelse(is.na(as.data.frame(grid1)[j,i]), 0, 1)
estado2 <- ifelse(is.na(as.data.frame(grid2)[j,i]), 0, 1)
estado3 <- ifelse(is.na(as.data.frame(grid3)[j,i]), 0, 1)
if (estado1 + estado2 + estado3 == 0) {
} else {
print(paste(i, j, n%/%49, estado1, estado2, estado3))
output[[indice]] <- list(
i = n,
x = i,
y = j,
st1 = estado1,
st2 = estado2,
st3 = estado3
)
indice <- indice + 1
}
n <- n + 1
}
}
tam <- length(output)
grid <- data.frame(
x = rep(0, tam),
y = rep(0, tam),
st1 = rep(0, tam))
nn <- 1
for (el in output) {
grid[nn,'x'] = el$x
grid[nn,'y'] = el$y
grid[nn,'st1'] = el$st1
nn <- nn+1
}
ggplot(grid) + geom_point(aes(x = x, y = -y, size = st1))
for (i in 1:grid_w) {
for (j in 1:grid_h) {
estado1 <- ifelse(is.na(as.data.frame(grid1)[j,i]), 0, 1)
estado2 <- ifelse(is.na(as.data.frame(grid2)[j,i]), 0, 1)
estado3 <- ifelse(is.na(as.data.frame(grid3)[j,i]), 0, 1)
if (estado1 + estado2 + estado3 == 0) {
} else {
print(paste(i, j, n%/%49, estado1, estado2, estado3))
output[[indice]] <- list(
i = n,
x = i,
y = j,
st1 = estado1,
st2 = estado2,
st3 = estado3
)
indice <- indice + 1
}
n <- n + 1
}
}
write_json(output, 'grid.json')
n <- 1
indice <- 1
output <- list()
for (i in 1:grid_h) {
for (j in 1:grid_w) {
estado1 <- ifelse(is.na(as.data.frame(grid1)[j,i]), 0, 1)
estado2 <- ifelse(is.na(as.data.frame(grid2)[j,i]), 0, 1)
estado3 <- ifelse(is.na(as.data.frame(grid3)[j,i]), 0, 1)
if (estado1 + estado2 + estado3 == 0) {
} else {
print(paste(i, j, n%/%49, estado1, estado2, estado3))
output[[indice]] <- list(
i = n,
x = i,
y = j,
st1 = estado1,
st2 = estado2,
st3 = estado3
)
indice <- indice + 1
}
n <- n + 1
}
}
write_json(output, 'grid.json')
n <- 1
indice <- 1
output <- list()
for (i in 1:grid_h) {
for (j in 1:grid_w) {
estado1 <- ifelse(is.na(as.data.frame(grid1)[i,j]), 0, 1)
estado2 <- ifelse(is.na(as.data.frame(grid2)[j,i]), 0, 1)
estado3 <- ifelse(is.na(as.data.frame(grid3)[j,i]), 0, 1)
if (estado1 + estado2 + estado3 == 0) {
} else {
print(paste(i, j, n%/%49, estado1, estado2, estado3))
output[[indice]] <- list(
i = n,
x = i,
y = j,
st1 = estado1,
st2 = estado2,
st3 = estado3
)
indice <- indice + 1
}
n <- n + 1
}
}
write_json(output, 'grid.json')
n <- 1
indice <- 1
output <- list()
for (i in 1:grid_h) {
for (j in 1:grid_w) {
estado1 <- ifelse(is.na(as.data.frame(grid1)[i,j]), 0, 1)
estado2 <- ifelse(is.na(as.data.frame(grid2)[i,j]), 0, 1)
estado3 <- ifelse(is.na(as.data.frame(grid3)[i,j]), 0, 1)
if (estado1 + estado2 + estado3 == 0) {
} else {
print(paste(i, j, n%/%49, estado1, estado2, estado3))
output[[indice]] <- list(
i = n,
x = i,
y = j,
st1 = estado1,
st2 = estado2,
st3 = estado3
)
indice <- indice + 1
}
n <- n + 1
}
}
write_json(output, 'grid.json')
grid1 <- read_excel('grids.xlsx', sheet = 1)
grid2 <- read_excel('grids.xlsx', sheet = 2)
grid3 <- read_excel('grids.xlsx', sheet = 3)
linhas <- 5
colunas <- 7
cells_por_linha <- 9
cells_por_coluna <- 7
grid_h <- linhas * cells_por_linha
grid_w <- colunas * cells_por_coluna
n <- 1
indice <- 1
output <- list()
for (i in 1:grid_h) {
for (j in 1:grid_w) {
estado1 <- ifelse(is.na(as.data.frame(grid1)[i,j]), 0, 1)
estado2 <- ifelse(is.na(as.data.frame(grid2)[i,j]), 0, 1)
estado3 <- ifelse(is.na(as.data.frame(grid3)[i,j]), 0, 1)
if (estado1 + estado2 + estado3 == 0) {
} else {
print(paste(i, j, n%/%49, estado1, estado2, estado3))
output[[indice]] <- list(
i = n,
x = i,
y = j,
st1 = estado1,
st2 = estado2,
st3 = estado3
)
indice <- indice + 1
}
n <- n + 1
}
}
write_json(output, 'grid.json')
library(tidyverse)
library(lubridate)
datas <- data.frame(
datas = as.Date(c("1979-10-15", "2011-07-21", "2013-10-02", "2016-03-14")),
marcos = c("nascimento", "beijo", "vi", "do")
)
dias <- as.Date("1979-10-15"):as.Date("2022-01-25")
dias <- lubridate::as_date(dias)
dataset <- data.frame(datas = dias) %>%
left_join(datas) %>%
mutate(ano = year(datas),
dia = lubridate::yday(datas))
View(dataset)
dataset <- data.frame(datas = dias) %>%
left_join(datas) %>%
mutate(ano = year(datas),
dia = lubridate::yday(datas),
week = lubridate::week(datas))
dataset <- data.frame(datas = dias) %>%
left_join(datas) %>%
mutate(ano = year(datas),
dia = lubridate::yday(datas),
week = lubridate::week(datas)) %>%
group_by(week) %>%
fill(marcos)
dataset <- data.frame(datas = dias) %>%
left_join(datas) %>%
mutate(ano = year(datas),
dia = lubridate::yday(datas),
week = lubridate::week(datas)) %>%
group_by(week) %>%
fill(marcos) %>%
ungroup() %>%
group_by(ano, week) %>%
summarise(marcos = first(marcos))
ggplot(dataset) +
geom_tile(aes(x = week, y = -ano), height = .4, width = .4, color = 'white') +
theme_void() + theme(legend.position = 'none')
ggplot(dataset) +
geom_tile(aes(x = week, y = -ano, fill = marcos), height = .4, width = .4, color = 'white') +
theme_void() + theme(legend.position = 'none')
dataset <- data.frame(datas = dias) %>%
left_join(datas) %>%
mutate(ano = year(datas),
dia = lubridate::yday(datas),
week = lubridate::week(datas)) %>%
group_by(ano, week) %>%
fill(marcos) %>%
summarise(marcos = first(marcos))
ggplot(dataset) +
geom_tile(aes(x = week, y = -ano, fill = marcos), height = .4, width = .4, color = 'white') +
theme_void() + theme(legend.position = 'none')
dataset <- data.frame(datas = dias) %>%
left_join(datas) %>%
mutate(ano = year(datas),
dia = lubridate::yday(datas),
week = lubridate::week(datas)) %>%
group_by(ano, week) %>%
summarise(marcos = max(marcos))
ggplot(dataset) +
geom_tile(aes(x = week, y = -ano, fill = marcos), height = .4, width = .4, color = 'white') +
theme_void() + theme(legend.position = 'none')
datas <- data.frame(
datas = as.Date(c("1979-10-15", "2011-07-21", "2013-10-02", "2016-03-14")),
marcos = c("nascimento", "beijo", "vi", "do")
) %>%
mutate(
ano = year(datas),
week = lubridate::week(datas)
)
View(datas)
datas <- data.frame(
datas = as.Date(c("1979-10-15", "2011-07-21", "2013-10-02", "2016-03-14")),
marcos = c("nascimento", "beijo", "vi", "do")
) %>%
mutate(
ano = year(datas),
week = lubridate::week(datas)
) %>%
select(-datas)
dataset <- data.frame(datas = dias) %>%
mutate(ano = year(datas),
dia = lubridate::yday(datas),
week = lubridate::week(datas)) %>%
group_by(ano, week) %>%
summarise())
dataset <- data.frame(datas = dias) %>%
mutate(ano = year(datas),
dia = lubridate::yday(datas),
week = lubridate::week(datas)) %>%
group_by(ano, week) %>%
summarise()
dataset <- data.frame(datas = dias) %>%
mutate(ano = year(datas),
dia = lubridate::yday(datas),
week = lubridate::week(datas)) %>%
group_by(ano, week) %>%
summarise() %>%
ungroup() %>%
left_join(datas)
ggplot(dataset) +
geom_tile(aes(x = week, y = -ano, fill = marcos), height = .4, width = .4, color = 'white') +
theme_void() + theme(legend.position = 'none')
ggplot(dataset) +
geom_tile(aes(x = week, y = -ano, fill = marcos), height = 1, width = 1, color = 'white') +
theme_void() + theme(legend.position = 'none')
ggplot(dataset) +
geom_tile(aes(x = week, y = -ano, fill = marcos), height = .7, width = .7, color = 'white') +
theme_void() + theme(legend.position = 'none')
